{"version":3,"file":"static/js/512.126d137b.chunk.js","mappings":"oRAGaA,EAAkBC,EAAAA,GAAAA,KAAH,uJAUfC,EAAQD,EAAAA,GAAAA,GAAH,oEAKLE,EAAQF,EAAAA,GAAAA,MAAH,qHAIFG,EAAAA,GAAAA,UACJA,EAAAA,GAAAA,QAGCC,EAASJ,EAAAA,GAAAA,OAAH,4M,mBCrBNK,EAAsB,WACjC,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,WAAOC,GAAP,kFACpBA,EAAEC,iBAEIC,EAAOF,EAAEG,cAQTC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAZpB,kBAeZT,GAASW,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOG,SAAAA,KAfZ,OAiBlBL,EAAKO,QAjBa,kDAmBlBC,QAAQC,IAAR,OACAC,EAAAA,EAAAA,IAAQ,qCAAiCC,EAAAA,IApBvB,0DAAH,sDAwBnB,OACE,UAACvB,EAAD,CAAiBwB,aAAc,MAAOC,SAAUhB,EAAhD,WACE,SAACP,EAAD,yBACA,kCACA,SAACC,EAAD,CAAOuB,KAAK,QAAQC,KAAK,WACzB,qCACA,SAACxB,EAAD,CAAOuB,KAAK,WAAWC,KAAK,cAC5B,SAACtB,EAAD,CAAQqB,KAAK,SAAb,qBAGL,E,UC/BD,EARwB,WACtB,OACE,SAAC,KAAD,CAAYE,OAAK,EAAjB,UACE,SAACtB,EAAD,KAGL,C","sources":["components/LogInForm/LogInForm.styled.tsx","components/LogInForm/LogInForm.tsx","pages/Login.tsx"],"sourcesContent":["import { other } from '../../constants';\nimport styled from 'styled-components';\n\nexport const LogInFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n\n  width: 300px;\n  margin: 150px auto 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  box-shadow: ${other.boxShadow};\n  border: ${other.border};\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  margin-top: 30px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n","import { useAppDispatch } from 'hooks';\nimport { logIn } from 'redux/auth/operations';\nimport { Button, Input, LogInFormStyled, Title } from './LogInForm.styled';\nimport { ERROR, myToast } from 'utils';\n\nexport const LogInForm: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const handleOnLogIn = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    const form = e.currentTarget as typeof e.currentTarget & {\n      reset: () => void;\n      elements: {\n        email: { value: string };\n        password: { value: string };\n      };\n    };\n\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    try {\n      await dispatch(logIn({ email, password }));\n\n      form.reset();\n    } catch (err: any) {\n      console.log(err);\n      myToast(\"‚ùå We didn't get your contacts\", ERROR);\n    }\n  };\n\n  return (\n    <LogInFormStyled autoComplete={'off'} onSubmit={handleOnLogIn}>\n      <Title>LogIn now</Title>\n      <p>Email</p>\n      <Input type=\"email\" name=\"email\" />\n      <p>Password</p>\n      <Input type=\"password\" name=\"password\" />\n      <Button type=\"submit\">LogIn</Button>\n    </LogInFormStyled>\n  );\n};\n","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { SectionBox } from 'components/Other';\n\nconst Login: React.FC = () => {\n  return (\n    <SectionBox first>\n      <LogInForm />\n    </SectionBox>\n  );\n};\n\nexport default Login;\n"],"names":["LogInFormStyled","styled","Title","Input","other","Button","LogInForm","dispatch","useAppDispatch","handleOnLogIn","e","preventDefault","form","currentTarget","email","elements","value","password","logIn","reset","console","log","myToast","ERROR","autoComplete","onSubmit","type","name","first"],"sourceRoot":""}